version: "3.7"
services:
    spring-boot:
        container_name: spring-boot
        build:
            dockerfile: ./Dockerfile
            context: .
        image: server:latest
        ports:
            - "8085:8085"
        depends_on:
            - postgres
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
        restart: always
        networks:
            - spring-cloud-network
    postgres:
        container_name: postgres
        image: postgres:latest
        restart: always
        user: postgres
        expose:
            - 5432
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
            - PGDATA=/var/lib/postgresql/data/pgdata
        logging:
            options:
                max-size: 10m
                max-file: "3"
        ports:
            - "5432:5432"
        volumes:
            - ./data/postgres-data:/var/lib/postgresql
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - spring-cloud-network

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        restart: always
        user: root
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: root
        ports:
            - "5050:80"
        volumes:
            - ./data/pgadmin-data:/var/lib/pgadmin
        networks:
            - spring-cloud-network
networks:
    spring-cloud-network:
        driver: bridge
